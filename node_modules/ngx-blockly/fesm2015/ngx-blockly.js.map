{"version":3,"file":"ngx-blockly.js","sources":["../../../projects/ngx-blockly/src/lib/ngx-blockly/ngx-blockly.config.ts","../../../projects/ngx-blockly/src/lib/ngx-blockly/ngx-blockly.component.ts","../../../projects/ngx-blockly/src/lib/ngx-blockly/ngx-blockly.component.html","../../../projects/ngx-blockly/src/lib/ngx-blockly/ngx-blockly-generator.config.ts","../../../projects/ngx-blockly/src/lib/ngx-blockly/models/block.ts","../../../projects/ngx-blockly/src/lib/ngx-blockly/models/custom-block.ts","../../../projects/ngx-blockly/src/lib/ngx-blockly/models/xml-block.ts","../../../projects/ngx-blockly/src/lib/ngx-blockly/models/category.ts","../../../projects/ngx-blockly/src/lib/ngx-blockly/models/button.ts","../../../projects/ngx-blockly/src/lib/ngx-blockly/models/label.ts","../../../projects/ngx-blockly/src/lib/ngx-blockly/models/separator.ts","../../../projects/ngx-blockly/src/lib/ngx-blockly/models/theme.ts","../../../projects/ngx-blockly/src/lib/ngx-blockly/models/block-mutator.ts","../../../projects/ngx-blockly/src/lib/ngx-blockly/plugins/ngx-blockly.toolbox.ts","../../../projects/ngx-blockly/src/lib/ngx-blockly.module.ts","../../../projects/ngx-blockly/src/public_api.ts","../../../projects/ngx-blockly/src/ngx-blockly.ts"],"sourcesContent":["import * as Blockly from 'blockly/core';\nimport { BlockStyle } from './models/theme';\n\nexport enum NgxBlocklyGenerator {\n    DART = 'Dart',\n    JAVASCRIPT = 'JavaScript',\n    LUA = 'Lua',\n    PHP = 'PHP',\n    PYTHON = 'Python',\n    XML = 'Xml'\n}\n\nexport interface NgxBlocklyConfig extends Blockly.BlocklyOptions {\n    defaultBlocks?: boolean;\n    generators?: NgxBlocklyGenerator[];\n    plugins?: { [name: string]: any };\n}\n","import {\n    AfterViewInit,\n    ElementRef,\n    Component,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChange,\n    ViewChild\n} from '@angular/core';\nimport {NgxBlocklyConfig, NgxBlocklyGenerator} from './ngx-blockly.config';\nimport {CustomBlock} from './models/custom-block';\nimport * as Blockly from 'blockly/core';\nimport 'blockly/dart';\nimport 'blockly/javascript';\nimport 'blockly/lua';\nimport 'blockly/php';\nimport 'blockly/python';\nimport {NgxBlocklyToolbox} from './plugins/ngx-blockly.toolbox';\n\n@Component({\n    selector: 'ngx-blockly',\n    templateUrl: './ngx-blockly.component.html',\n    styleUrls: ['./ngx-blockly.component.css']\n})\nexport class NgxBlocklyComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n\n    @Input() public config: NgxBlocklyConfig = {};\n    @Input() public customBlocks: CustomBlock[] = [];\n    @Input() public readOnly = false;\n    @Output() public workspaceCreate: EventEmitter<Blockly.WorkspaceSvg> = new EventEmitter<Blockly.WorkspaceSvg>();\n    @Output() public workspaceChange: EventEmitter<Blockly.Events.Abstract> = new EventEmitter<Blockly.Events.Abstract>();\n    @Output() public toolboxChange: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public dartCode: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public javascriptCode: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public luaCode: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public phpCode: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public pythonCode: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public xmlCode: EventEmitter<string> = new EventEmitter<string>();\n\n    @ViewChild('primaryContainer') primaryContainer: ElementRef;\n    @ViewChild('secondaryContainer') secondaryContainer: ElementRef;\n    public workspace: Blockly.WorkspaceSvg;\n    private _secondaryWorkspace: Blockly.WorkspaceSvg;\n    private _resizeTimeout;\n    private _finishedLoading = false;\n\n    public static initCustomBlocks(blocks: CustomBlock[]) {\n        if (blocks) {\n            for (const customBlock of blocks) {\n                Blockly.Blocks[customBlock.type] = {\n                    init: function () {\n                        const block = new customBlock.class(customBlock.type, customBlock.blockMutator, ...customBlock.args);\n                        block.init(this);\n                        this.mixin({\n                                blockInstance: block\n                            }\n                        );\n                    }\n                };\n                if (typeof Blockly[NgxBlocklyGenerator.PYTHON] !== 'undefined') {\n                    Blockly[NgxBlocklyGenerator.PYTHON][customBlock.type] = function (b) {\n                        return b.blockInstance.toPythonCode(b);\n                    };\n                }\n                if (typeof Blockly[NgxBlocklyGenerator.DART] !== 'undefined') {\n                    Blockly[NgxBlocklyGenerator.DART][customBlock.type] = function (b) {\n                        return b.blockInstance.toDartCode(b);\n                    };\n                }\n                if (typeof Blockly[NgxBlocklyGenerator.JAVASCRIPT] !== 'undefined') {\n                    Blockly[NgxBlocklyGenerator.JAVASCRIPT][customBlock.type] = function (b) {\n                        return b.blockInstance.toJavaScriptCode(b);\n                    };\n                }\n                if (typeof Blockly[NgxBlocklyGenerator.LUA] !== 'undefined') {\n                    Blockly[NgxBlocklyGenerator.LUA][customBlock.type] = function (b) {\n                        return b.blockInstance.toLuaCode(b);\n                    };\n                }\n                if (typeof Blockly[NgxBlocklyGenerator.PHP] !== 'undefined') {\n                    Blockly[NgxBlocklyGenerator.PHP][customBlock.type] = function (b) {\n                        return b.blockInstance.toPHPCode(b);\n                    };\n                }\n                if (customBlock.blockMutator) {\n                    const mutator_mixin: any = {\n                        mutationToDom: function () {\n                            return customBlock.blockMutator.mutationToDom.call(customBlock.blockMutator, this);\n                        },\n                        domToMutation: function (xmlElement: any) {\n                            customBlock.blockMutator.domToMutation.call(customBlock.blockMutator, this, xmlElement);\n                        }\n                    };\n                    if (customBlock.blockMutator.blockList && customBlock.blockMutator.blockList.length > 0) {\n                        mutator_mixin.decompose = function (workspace: any) {\n                            return customBlock.blockMutator.decompose.call(customBlock.blockMutator, this, workspace);\n                        };\n                        mutator_mixin.compose = function (topBlock: any) {\n                            customBlock.blockMutator.compose.call(customBlock.blockMutator, this, topBlock);\n                        };\n                        mutator_mixin.saveConnections = function (containerBlock: any) {\n                            customBlock.blockMutator.saveConnections.call(customBlock.blockMutator, this, containerBlock);\n                        };\n                    }\n                    Blockly.Extensions.unregister(customBlock.blockMutator.name);\n                    Blockly.Extensions.registerMutator(\n                        customBlock.blockMutator.name,\n                        mutator_mixin,\n                        function () {\n                            customBlock.blockMutator.afterBlockInit.call(customBlock.blockMutator, this);\n                        },\n                        customBlock.blockMutator.blockList\n                    );\n                }\n            }\n        }\n    }\n\n    ngOnInit() {\n        NgxBlocklyComponent.initCustomBlocks(this.customBlocks);\n    }\n\n    ngAfterViewInit() {\n        const readOnly = this.config.readOnly || this.readOnly;\n        this.config.readOnly = false;\n        this.workspace = Blockly.inject(this.primaryContainer.nativeElement, this.config);\n        this.workspace.addChangeListener(this._onWorkspaceChange.bind(this));\n        this.workspace.fireChangeListener(new Blockly.Events.FinishedLoading());\n        this.workspaceCreate.emit(this.workspace);\n        this.resize();\n        if (readOnly) {\n            this.setReadonly(true);\n            this.config.readOnly = true;\n        }\n    }\n\n    ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n        //skip this if the change comes before we are initialized\n        if (changes.readOnly && this._secondaryWorkspace) {\n            this.setReadonly(changes.readOnly.currentValue);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.workspace) {\n            this.workspace.dispose();\n        }\n        if (this._secondaryWorkspace) {\n            this._secondaryWorkspace.dispose();\n        }\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        clearTimeout(this._resizeTimeout);\n        this._resizeTimeout = setTimeout(() => this.resize(), 200);\n    }\n\n    /**\n     * Generate code for all blocks in the workspace to the specified output.\n     * @param workspaceId Workspace to generate code from.\n     */\n    public workspaceToCode(workspaceId: string) {\n        for (const generator of this.config.generators) {\n            switch (generator) {\n                case NgxBlocklyGenerator.DART:\n                    this.dartCode.emit(Blockly[NgxBlocklyGenerator.DART].workspaceToCode(Blockly.Workspace.getById(workspaceId)));\n                    break;\n                case NgxBlocklyGenerator.LUA:\n                    this.luaCode.emit(Blockly[NgxBlocklyGenerator.LUA].workspaceToCode(Blockly.Workspace.getById(workspaceId)));\n                    break;\n                case NgxBlocklyGenerator.JAVASCRIPT:\n                    this.javascriptCode.emit(Blockly[NgxBlocklyGenerator.JAVASCRIPT].workspaceToCode(Blockly.Workspace.getById(workspaceId)));\n                    break;\n                case NgxBlocklyGenerator.PHP:\n                    this.phpCode.emit(Blockly[NgxBlocklyGenerator.PHP].workspaceToCode(Blockly.Workspace.getById(workspaceId)));\n                    break;\n                case NgxBlocklyGenerator.PYTHON:\n                    this.pythonCode.emit(Blockly[NgxBlocklyGenerator.PYTHON].workspaceToCode(Blockly.Workspace.getById(workspaceId)));\n                    break;\n                case NgxBlocklyGenerator.XML:\n                    this.xmlCode.emit(Blockly.Xml.domToPrettyText(Blockly.Xml.workspaceToDom(Blockly.Workspace.getById(workspaceId))));\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Converts a DOM structure into properly indented text.\n     * @return Text representation.\n     */\n    public toXml(): string {\n        return Blockly.Xml.domToPrettyText(Blockly.Xml.workspaceToDom(this.workspace));\n    }\n\n    /**\n     * Clear the given workspace then decode an XML DOM and\n     * create blocks on the workspace.\n     * @param xml XML DOM..\n     */\n    public fromXml(xml: string) {\n        this._finishedLoading = false;\n        Blockly.Xml.clearWorkspaceAndLoadFromXml(Blockly.Xml.textToDom(xml), this.workspace);\n        if (this._secondaryWorkspace) {\n            Blockly.Xml.clearWorkspaceAndLoadFromXml(Blockly.Xml.textToDom(xml), this._secondaryWorkspace);\n        }\n    }\n\n    /**\n     * Decode an XML DOM and create blocks on the workspace. Position the new\n     * blocks immediately below prior blocks, aligned by their starting edge.\n     * @param xml The XML DOM.\n     */\n    public appendFromXml(xml: string) {\n        Blockly.Xml.appendDomToWorkspace(Blockly.Xml.textToDom(xml), this.workspace);\n        if (this._secondaryWorkspace) {\n            Blockly.Xml.appendDomToWorkspace(Blockly.Xml.textToDom(xml), this._secondaryWorkspace);\n        }\n    }\n\n    /**\n     * Dispose of all blocks in workspace, with an optimization to prevent resizes.\n     */\n    public clear() {\n        if (this.workspace) {\n            this.workspace.clear();\n        }\n    }\n\n    /**\n     * Clear the undo/redo stacks.\n     */\n    public clearUndo() {\n        if (this.workspace) {\n            this.workspace.clearUndo();\n        }\n    }\n\n    /**\n     * Clear the reference to the current gesture.\n     */\n    public clearGesture() {\n        if (this.workspace) {\n            this.workspace.clearGesture();\n        }\n    }\n\n    /**\n     * Clear search input and result set.\n     */\n    public clearSearch() {\n        if (this.workspace) {\n            const toolbox = this.workspace.getToolbox() as NgxBlocklyToolbox;\n            if (toolbox && typeof toolbox.clearSearch === 'function') {\n                toolbox.clearSearch();\n            }\n        }\n    }\n\n    /**\n     * Size the workspace when the contents change. This also updates\n     * scrollbars accordingly.\n     */\n    public resize() {\n        if (this.workspace) {\n            Blockly.svgResize(this.workspace);\n        }\n        if (this._secondaryWorkspace) {\n            Blockly.svgResize(this._secondaryWorkspace);\n        }\n    }\n\n    public setReadonly(readOnly: boolean) {\n        this.readOnly = readOnly;\n        if (readOnly) {\n            this.secondaryContainer.nativeElement.classList.remove('hidden');\n            if (!this._secondaryWorkspace) {\n                const config = {...this.config};\n                config.readOnly = true;\n                this._secondaryWorkspace = Blockly.inject(this.secondaryContainer.nativeElement, config);\n            }\n            Blockly.Xml.clearWorkspaceAndLoadFromXml(Blockly.Xml.textToDom(this.toXml()), this._secondaryWorkspace);\n        } else {\n            if (this._secondaryWorkspace) {\n                this.secondaryContainer.nativeElement.classList.add('hidden');\n            }\n        }\n    }\n\n    public highlightBlock(blockId: string) {\n        if (this.workspace) {\n            this.workspace.highlightBlock(blockId);\n        }\n        if (this._secondaryWorkspace) {\n            this._secondaryWorkspace.highlightBlock(blockId);\n        }\n    }\n\n    private _onWorkspaceChange(event: any) {\n        this.workspaceChange.emit(event);\n        if (event.type === Blockly.Events.FINISHED_LOADING) {\n            this._finishedLoading = true;\n        }\n        if (this._finishedLoading) {\n            if (event instanceof Blockly.Events.BlockBase ||\n                event instanceof Blockly.Events.VarBase ||\n                event instanceof Blockly.Events.CommentBase) {\n                this.workspaceToCode(event.workspaceId);\n            }\n            if (event.type === Blockly.Events.TOOLBOX_ITEM_SELECT) {\n                this.toolboxChange.emit(event);\n            }\n        }\n    }\n}\n","<div id=\"blockly-wrapper\" class=\"blockly-wrapper\">\n    <div #primaryContainer class=\"blockly\"></div>\n    <div #secondaryContainer class=\"blockly hidden\"></div>\n</div>\n","export class NgxBlocklyGeneratorConfig {\n    dart?: boolean;\n    javascript?: boolean;\n    lua?: boolean;\n    php?: boolean;\n    python?: boolean;\n    xml?: boolean;\n}\n","import { BlockMutator } from './block-mutator';\nimport { CustomBlock } from './custom-block';\nimport { Node } from './node';\n\n\nexport type Constructor = new (type: string, blockMutator?: BlockMutator, ...args: any[]) => CustomBlock;\n\nexport abstract class Block implements Node {\n\n    public kind = 'BLOCK';\n    private _type: string;\n    private _class: Constructor;\n    private _disabled = false;\n\n    protected constructor(type: string) {\n        this._type = type;\n    }\n\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value;\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = value;\n    }\n\n    get class(): Constructor  {\n        return this._class;\n    }\n\n    set class(value: Constructor ) {\n        this._class = value;\n    }\n\n    public abstract toXML();\n}\n","import { BlockMutator } from './block-mutator';\nimport { Block } from './block';\nimport * as Blockly from 'blockly/core';\n\nexport abstract class CustomBlock extends Block {\n\n    private _block: Blockly.Block;\n    private _blockMutator: BlockMutator;\n    private _args: any[];\n\n\n    constructor(type: string, blockMutator?: BlockMutator, ...args: any[]) {\n        super(type);\n        this._blockMutator = blockMutator ? blockMutator : null;\n        this._args = args;\n    }\n\n    public init(block: Blockly.Block) {\n        this._block = block;\n        this.defineBlock();\n        this.block.setOnChange(function (event) {\n            this.blockInstance.onChange(event);\n        });\n    }\n\n    public abstract defineBlock();\n\n    public onChange(changeEvent: Blockly.Events.Abstract) {\n        // nothing to do\n    }\n\n    public toXML(): string {\n        return `<block type=\"${this.type}\" disabled=\"${this.disabled}\"></block>`;\n    }\n\n    public toDartCode(block: Blockly.Block): string | any[] {\n        return 'Not implemented';\n    }\n\n    public toJavaScriptCode(block: Blockly.Block): string | any[] {\n        return 'Not implemented';\n    }\n\n    public toLuaCode(block: Blockly.Block): string | any[] {\n        return 'Not implemented';\n    }\n\n    public toPHPCode(block: Blockly.Block): string | any[] {\n        return 'Not implemented';\n    }\n\n    public toPythonCode(block: Blockly.Block): string | any[] {\n        return 'Not implemented';\n    }\n\n    get block():  Blockly.Block {\n        return this._block;\n    }\n\n    set block(block:  Blockly.Block) {\n        this._block = block;\n    }\n\n    get blockMutator(): BlockMutator {\n        return this._blockMutator;\n    }\n\n    set blockMutator(mutator: BlockMutator) {\n        this._blockMutator = mutator;\n    }\n\n    get args(): any[] {\n        return this._args;\n    }\n\n    set args(args: any[]) {\n        this._args = args;\n    }\n}\n","import { Block } from './block';\n\nexport class XmlBlock extends Block {\n\n    private _values: Value[] = [];\n    private _field: Field;\n    private _mutation: Mutation;\n    private _shadow: boolean;\n\n    constructor(type: string, shadow = false) {\n        super(type);\n        this._shadow = shadow;\n    }\n\n    get values(): Value[] {\n        return this._values;\n    }\n\n    set values(value: Value[]) {\n        this._values = value;\n    }\n\n    get field(): Field {\n        return this._field;\n    }\n\n    set field(value: Field) {\n        this._field = value;\n    }\n\n    get mutation(): Mutation {\n        return this._mutation;\n    }\n\n    set mutation(mutation: Mutation) {\n        this._mutation = mutation;\n    }\n\n    public toXML(): string {\n        const tagName = this._shadow ? 'shadow' : 'block';\n        let xml = `<${tagName} type=\"${this.type}\" disabled=\"${this.disabled}\">`;\n        for (const value of this.values) {\n            xml += value.toXML();\n        }\n        xml += this.field ? this.field.toXML() : '';\n        if (this._mutation) {\n            xml += this._mutation.toXML();\n        }\n        xml += `</${tagName}>`;\n        return xml;\n    }\n}\n\nexport class Value {\n    private _name: string;\n    private _block: XmlBlock;\n\n    constructor(name: string, block: XmlBlock) {\n        this._name = name;\n        this._block = block;\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._name = value;\n    }\n\n    get block(): XmlBlock {\n        return this._block;\n    }\n\n    set block(value: XmlBlock) {\n        this._block = value;\n    }\n\n    public toXML(): string {\n        return `<value name=\"${this.name}\">` + this.block.toXML() + '</value>';\n    }\n}\n\nexport class Field {\n    private _name: string;\n    private _value: string;\n\n    constructor(name: string, value: string) {\n        this._name = name;\n        this._value = value;\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._name = value;\n    }\n\n    get value(): string {\n        return this._value;\n    }\n\n    set value(value: string) {\n        this._value = value;\n    }\n\n    public toXML(): string {\n        return `<field name=\"${this.name}\">` + this.value + '</field>';\n    }\n}\n\nexport class Mutation {\n\n    private _name: string;\n    private _value: string;\n\n    constructor(name: string, value: string) {\n        this._name = name;\n        this._value = value;\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._name = value;\n    }\n\n    get value(): string {\n        return this._value;\n    }\n\n    set value(value: string) {\n        this._value = value;\n    }\n\n    public toXML(): string {\n        return '<mutation ' + this.name + ' = \"' + this.value + '\"></mutation>';\n    }\n}\n","import { UUID } from 'angular2-uuid';\nimport { Node } from './node';\nimport { XmlBlock } from './xml-block';\n\nexport class Category implements Node {\n\n    private _nodes: Node [];\n    private _colour: string;\n    private _name: string;\n    private _custom: string;\n    private _style: string;\n    private _cssClass: string;\n    private _toolboxItemId: string;\n    private _hidden: boolean;\n\n    constructor(name: string,\n                colour: string,\n                nodes?: Node [],\n                custom?: string,\n                style?: string,\n                cssClass?: string,\n                toolboxItemId?: string,\n                hidden?: boolean) {\n        this._name = name;\n        this._nodes = nodes ? nodes : [];\n        this._colour = colour;\n        this._custom = custom;\n        this._style = style;\n        this._cssClass = cssClass;\n        this._toolboxItemId = toolboxItemId ? toolboxItemId : UUID.UUID();\n        this._hidden = hidden;\n    }\n\n    get nodes(): Node[] {\n        return this._nodes;\n    }\n\n    set nodes(nodes: Node[]) {\n        this._nodes = nodes;\n    }\n\n    get colour(): string {\n        return this._colour;\n    }\n\n    set colour(value: string) {\n        this._colour = value;\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._name = value;\n    }\n\n    get custom(): string {\n        return this._custom;\n    }\n\n    set custom(value: string) {\n        this._custom = value;\n    }\n\n    get style(): string {\n        return this._style;\n    }\n\n    set style(value: string) {\n        this._style = value;\n    }\n\n    get cssClass(): string {\n        return this._cssClass;\n    }\n\n    set cssClass(value: string) {\n        this._cssClass = value;\n    }\n\n    get toolboxItemId(): string {\n        return this._toolboxItemId;\n    }\n\n    set toolboxItemId(value: string) {\n        this._toolboxItemId = value;\n    }\n\n    get hidden(): boolean {\n        return this._hidden;\n    }\n\n    set hidden(value: boolean) {\n        this._hidden = value;\n    }\n\n    public toXML(): string {\n        let xml = `<category expanded=\"false\" name=\"${this.name}\"`;\n\n        if (this.toolboxItemId) {\n            xml += ` toolboxitemid=\"${this.toolboxItemId}\"`;\n        }\n\n        if (!this.style) {\n            xml += ` colour=\"${this.colour}\"`;\n        } else {\n            xml += ` categorystyle=\"${this.style}\"`;\n        }\n\n        if (this.hidden) {\n            xml += ' hidden=\"true\"';\n        }\n\n        xml += this.cssClass ? ` categoryclass=\"${this.cssClass}\"` : '';\n        xml += this.custom ? ` custom=\"${this.custom}\">` : '>';\n\n        for (const element of this.nodes) {\n            xml += element.toXML();\n        }\n\n        xml += '</category>';\n\n        return xml;\n    }\n}\n\nexport const LOGIC_CATEGORY: Category = new Category('Logic', '%{BKY_LOGIC_HUE}', [\n    new XmlBlock('controls_if'),\n    new XmlBlock('logic_compare'),\n    new XmlBlock('logic_operation'),\n    new XmlBlock('logic_negate'),\n    new XmlBlock('logic_boolean'),\n    new XmlBlock('logic_null'),\n    new XmlBlock('logic_ternary'),\n]);\n\nexport const LOOP_CATEGORY: Category = new Category('Loops', '%{BKY_LOOPS_HUE}', [\n    new XmlBlock('controls_repeat_ext'),\n    new XmlBlock('controls_whileUntil'),\n    new XmlBlock('controls_for'),\n    new XmlBlock('controls_forEach'),\n    new XmlBlock('controls_flow_statements')\n]);\n\nexport const MATH_CATEGORY: Category = new Category('Math', '%{BKY_MATH_HUE}', [\n    new XmlBlock('math_number'),\n    new XmlBlock('math_arithmetic'),\n    new XmlBlock('math_single'),\n    new XmlBlock('math_trig'),\n    new XmlBlock('math_constant'),\n    new XmlBlock('math_number_property'),\n    new XmlBlock('math_round'),\n    new XmlBlock('math_on_list'),\n    new XmlBlock('math_modulo'),\n    new XmlBlock('math_constrain'),\n    new XmlBlock('math_random_int'),\n    new XmlBlock('math_random_float'),\n    new XmlBlock('math_atan2')\n]);\n\nexport const TEXT_CATEGORY: Category = new Category('Text', '%{BKY_TEXTS_HUE}', [\n    new XmlBlock('text'),\n    new XmlBlock('text_join'),\n    new XmlBlock('text_append'),\n    new XmlBlock('text_length'),\n    new XmlBlock('text_isEmpty'),\n    new XmlBlock('text_indexOf'),\n    new XmlBlock('text_charAt'),\n    new XmlBlock('text_getSubstring'),\n    new XmlBlock('text_changeCase'),\n    new XmlBlock('text_trim'),\n    new XmlBlock('text_print'),\n    new XmlBlock('text_prompt_ext')\n]);\n\nexport const LISTS_CATEGORY: Category = new Category('Lists', '%{BKY_LISTS_HUE}', [\n    new XmlBlock('lists_create_with'),\n    new XmlBlock('lists_repeat'),\n    new XmlBlock('lists_length'),\n    new XmlBlock('lists_isEmpty'),\n    new XmlBlock('lists_indexOf'),\n    new XmlBlock('lists_getIndex'),\n    new XmlBlock('lists_setIndex'),\n    new XmlBlock('lists_getSublist'),\n    new XmlBlock('lists_split'),\n    new XmlBlock('lists_sort'),\n]);\n\nexport const COLOUR_CATEGORY: Category = new Category('Colours', '%{BKY_COLOUR_HUE}', [\n    new XmlBlock('colour_picker'),\n    new XmlBlock('colour_random'),\n    new XmlBlock('colour_random'),\n    new XmlBlock('colour_blend')\n]);\n\nexport const VARIABLES_CATEGORY: Category = new Category('Variables', '%{BKY_VARIABLES_HUE}', [], 'VARIABLE');\n\nexport const FUNCTIONS_CATEGORY: Category = new Category('Functions', '%{BKY_PROCEDURES_HUE}', [], 'PROCEDURE');\n","import { Node } from './node';\n\nexport class Button implements Node {\n\n    public kind = 'BUTTON';\n    private _text: string;\n    private _callbackKey: string;\n\n    constructor(text: string, callbackKey: string) {\n        this._text = text;\n        this._callbackKey = callbackKey;\n    }\n\n    get text(): string {\n        return this._text;\n    }\n\n    set text(value: string) {\n        this._text = value;\n    }\n\n    get callbackKey(): string {\n        return this._callbackKey;\n    }\n\n    set callbackKey(value: string) {\n        this._callbackKey = value;\n    }\n\n    public toXML(): string {\n        return `<button text=\"${this.text}\" callbackKey=\"${this.callbackKey}\"></button>`;\n    }\n}\n","import { Node } from './node';\n\nexport class Label implements Node {\n\n    public kind = 'LABEL';\n    private _text: string;\n    private _webClass: string;\n\n    constructor(text: string, _webClass: string) {\n        this._text = text;\n        this._webClass = _webClass;\n    }\n\n    get text(): string {\n        return this._text;\n    }\n\n    set text(value: string) {\n        this._text = value;\n    }\n\n    get webClass(): string {\n        return this._webClass;\n    }\n\n    set webClass(value: string) {\n        this._webClass = value;\n    }\n\n    public toXML(): string {\n        return `<label text=\"${this.text}\" web-class=\"${this.webClass}\"></label>`;\n    }\n}\n","import { Node } from './node';\n\nexport class Separator implements Node {\n\n    public kind = 'SEP';\n\n    public toXML(): string {\n        return '<sep></sep>';\n    }\n}\n","import * as Blockly from 'blockly/core';\n\nexport class Theme {\n    constructor(private name: string,\n                private blockStyles: BlockStyles,\n                private categoryStyles: CategoryStyles,\n                private componentStyle: Blockly.Theme.ComponentStyle) {\n    }\n\n    createBlocklyTheme(): any {\n        return new Blockly.Theme(this.name, this.blockStyles, this.categoryStyles, this.componentStyle);\n    }\n}\n\nexport interface BlockStyles {\n    [blockStyleName: string]: Blockly.Theme.BlockStyle;\n}\n\nexport interface CategoryStyles {\n    [categoryStyleName: string]: Blockly.Theme.CategoryStyle;\n}\n\n\nexport class BlockStyle {\n    colourPrimary: string;\n    colourSecondary: string;\n    colourTertiary: string;\n    hat: string;\n}\n","export abstract class BlockMutator {\n\n    private _name: string;\n    private _blockList: string[];\n\n    constructor(name: string, blockList: string[] = null) {\n        this._name = name;\n        this._blockList = blockList;\n    }\n\n    public abstract mutationToDom(block: any);\n\n    public abstract domToMutation(block: any, xmlElement: any);\n\n    public abstract decompose(block: any, workspace: any);\n\n    public abstract compose(block: any, topBlock: any);\n\n    public abstract saveConnections(block: any, containerBlock: any);\n\n    public abstract afterBlockInit(block: any);\n\n    get name(): string {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._name = value;\n    }\n\n    get blockList(): string[] {\n        return this._blockList;\n    }\n\n    set blockList(value: string[]) {\n        this._blockList = value;\n    }\n}\n","import { UUID } from 'angular2-uuid';\nimport * as Blockly from 'blockly/core';\nimport { ICollapsibleToolboxItem, ToolboxCategory } from 'blockly/blockly';\nimport { Node } from '../models/node';\n\nexport class NgxBlocklyToolbox extends Blockly.Toolbox {\n\n    public readonly SEARCH_CATEGORY = 'SEARCH_CATEGORY';\n    public readonly SEARCH_PLACEHOLDER = 'SEARCH_PLACEHOLDER';\n    private readonly _SEARCHBAR_CLASS = 'searchbar';\n    private readonly _TOOLBAR_CLASS = 'toolbar';\n\n    protected _timeout: any;\n    protected _input: HTMLInputElement;\n    protected _categoryId = UUID.UUID();\n    protected _categoryExpandedCache: Map<String, boolean> = new Map<String, boolean>();\n    private _nodes: Node[];\n\n    constructor(workspace: Blockly.WorkspaceSvg) {\n        super(workspace);\n        workspace.addChangeListener(this._onWorkspaceChange.bind(this));\n    }\n\n    public init() {\n        super.init();\n        this._initSearchbar();\n    }\n\n    public render(parsedToolboxDef) {\n        if (parsedToolboxDef.contents.length === 0 || parsedToolboxDef.contents[0].toolboxitemid !== this._categoryId) {\n            const name = Blockly.Msg[this.SEARCH_CATEGORY] ? Blockly.Msg[this.SEARCH_CATEGORY] : 'Search';\n            const xmlDef =\n                '<xml>' +\n                '<category colour=\"#ccc\" expanded=\"false\" name=\"' + name + '\" hidden=\"true\" toolboxitemid=\"' + this._categoryId + '\"></category>' +\n                '</xml>';\n            const jsonDef = Blockly.utils.toolbox.convertToolboxDefToJson(xmlDef);\n            parsedToolboxDef.contents = [jsonDef.contents[0]].concat(parsedToolboxDef.contents);\n        }\n        super.render(parsedToolboxDef);\n        this._restoreExpandedState();\n    }\n\n    public clearSearch() {\n        this._clearSearchResult();\n        if (this._input) {\n            this._input.value = '';\n        }\n    }\n\n    public toXML(): string {\n        let xml = '<xml id=\"toolbox\" style=\"display: none\">';\n        if (this._nodes) {\n            for (const node of this._nodes) {\n                xml += node.toXML();\n            }\n        }\n        xml += '</xml>';\n        return xml;\n    }\n\n    get nodes(): Node[] {\n        return this._nodes;\n    }\n\n    set nodes(nodes: Node[]) {\n        this._nodes = nodes;\n    }\n\n    private _initSearchbar() {\n        this._input = document.createElement('input');\n        this._input.placeholder = Blockly.Msg[this.SEARCH_PLACEHOLDER] ? Blockly.Msg[this.SEARCH_PLACEHOLDER] : 'search';\n        this._input.className = this._SEARCHBAR_CLASS;\n        this._input.size = 1;\n        this._input.addEventListener('keyup', this._search.bind(this));\n        const element = this.HtmlDiv.firstChild as HTMLElement;\n        element.classList.add(this._TOOLBAR_CLASS);\n        this.HtmlDiv.insertBefore(this._input, element);\n    }\n\n    private _search(event) {\n\n        clearTimeout(this._timeout);\n        this._timeout = setTimeout(() => {\n\n            const searchKey = event.target.value.trim();\n            if (searchKey.length > 0) {\n\n                const result = this._recursiveSearch(searchKey, this.toolboxDef_);\n                if (result.length > 0) {\n                    const category = this.getToolboxItemById(this._categoryId) as ToolboxCategory;\n                    category.updateFlyoutContents(result);\n                    category.show();\n                    this.setSelectedItem(category);\n                } else {\n                    this._clearSearchResult();\n                }\n            } else {\n                this._clearSearchResult();\n            }\n        }, 100);\n    }\n\n    private _recursiveSearch(searchKey, child): any[] {\n        let blockDefs = [];\n        if (child.contents && Array.isArray(child.contents)) {\n            if (child.toolboxitemid && child.toolboxitemid === this._categoryId) {\n                return blockDefs;\n            }\n            for (let i = 0; i < child.contents.length; i++) {\n                if (typeof (child.contents[i]) === 'object' && child.contents[i].kind) {\n                    if (child.contents[i].kind === 'BLOCK' && child.contents[i].type) {\n                        const type = child.contents[i].type;\n                        if (this._compare(searchKey, type)) {\n                            blockDefs.push(child.contents[i]);\n                        } else {\n                            const workspace = new Blockly.Workspace();\n                            const searchBlock = workspace.newBlock(type);\n                            if (this._compare(searchKey, searchBlock.tooltip.toString())) {\n                                blockDefs.push(child.contents[i]);\n                            }\n                            workspace.dispose();\n                        }\n                    } else if (child.contents[i].kind === 'CATEGORY') {\n                        const result = this._recursiveSearch(searchKey, child.contents[i]);\n                        blockDefs = [...blockDefs, ...result];\n                    }\n                }\n            }\n        }\n        return blockDefs;\n    }\n\n    private _clearSearchResult() {\n        const flyout = this.workspace_.getFlyout();\n        if (flyout) {\n            flyout.hide();\n        }\n        const category: ToolboxCategory = this.getToolboxItemById(this._categoryId) as ToolboxCategory;\n        if (category) {\n            category.hide();\n        }\n    }\n\n    private _storeExpandedState() {\n        this.getToolboxItems().forEach(item => {\n            if (item.getId() !== this._categoryId) {\n                const collapsibleItem = item as ICollapsibleToolboxItem;\n                if (typeof collapsibleItem.isExpanded === 'function') {\n                    this._categoryExpandedCache.set(collapsibleItem.getId(), collapsibleItem.isExpanded());\n                }\n            }\n        });\n    }\n\n    private _restoreExpandedState() {\n        this._categoryExpandedCache.forEach((expanded: boolean, id: string) => {\n            const collapsibleItem = this.getToolboxItemById(id) as ICollapsibleToolboxItem;\n            if (collapsibleItem && typeof collapsibleItem.isExpanded === 'function') {\n                this._categoryExpandedCache.set(collapsibleItem.getId(), collapsibleItem.isExpanded());\n            }\n        });\n    }\n\n    private _onWorkspaceChange(event: any) {\n        if (event.type === Blockly.Events.TOOLBOX_ITEM_SELECT) {\n            this._storeExpandedState();\n        }\n    }\n\n    private _compare(str1: string, str2: string): boolean {\n        if (typeof str1 === 'string' && typeof str2 === 'string') {\n            str1 = this._prepareString(str1);\n            str2 = this._prepareString(str2);\n            if (str1.length > 0 && str2.length > 0) {\n                const array1: string[] = str1.split('_');\n                const array2: string[] = str2.split('_');\n                for (let i1 = 0; i1 < array1.length; i1++) {\n                    for (let i2 = 0; i2 < array2.length; i2++) {\n                        if (array2[i2].startsWith(array1[i1])) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    private _prepareString(str): string {\n        str = this._breakUpCamelCase(str);\n        str = str.toLowerCase().trim();\n        return this._replaceWhitespaceWithUnderscore(str);\n    }\n\n    private _breakUpCamelCase(str): string {\n        return str.replace(/([A-Z])/g, ' $1');\n    }\n\n    private _replaceWhitespaceWithUnderscore(str): string {\n        return str.replace(/\\s+/g, '_');\n    }\n}\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { NgxBlocklyComponent } from './ngx-blockly/ngx-blockly.component';\nimport * as Blockly from 'blockly/core';\n\n@NgModule({\n    declarations: [NgxBlocklyComponent],\n    imports: [],\n    exports: [NgxBlocklyComponent],\n    providers: [],\n    schemas: [NO_ERRORS_SCHEMA]\n})\nexport class NgxBlocklyModule {\n}\n\nBlockly.ToolboxCategory.prototype.parseContents_ = function (categoryDef) {\n    const contents = categoryDef['contents'];\n    if (categoryDef['custom']) {\n        this.flyoutItems_ = categoryDef['custom'];\n    } else if (contents) {\n        for (let i = 0, itemDef; (itemDef = contents[i]); i++) {\n            const flyoutItem = (itemDef);\n            this.flyoutItems_.push(flyoutItem);\n        }\n    }\n    if (categoryDef['categoryclass']) {\n        this.cssConfig_.row += ' ' + categoryDef['categoryclass'];\n    }\n};\n\nBlockly.CollapsibleToolboxCategory.prototype.parseContents_ = function (categoryDef) {\n    const contents = categoryDef['contents'];\n    let prevIsFlyoutItem = true;\n    if (categoryDef['custom']) {\n        this.flyoutItems_ = categoryDef['custom'];\n    } else if (contents) {\n        for (let i = 0, itemDef; (itemDef = contents[i]); i++) {\n            // Separators can exist as either a flyout item or a toolbox item so\n            // decide where it goes based on the type of the previous item.\n            if (!Blockly.registry.hasItem(Blockly.registry.Type.TOOLBOX_ITEM, itemDef['kind']) ||\n                (itemDef['kind'].toLowerCase() === Blockly.ToolboxSeparator.registrationName &&\n                    prevIsFlyoutItem)) {\n                const flyoutItem = (itemDef);\n                this.flyoutItems_.push(flyoutItem);\n                prevIsFlyoutItem = true;\n            } else {\n                this.createToolboxItem_(itemDef);\n                prevIsFlyoutItem = false;\n            }\n        }\n    }\n    if (categoryDef['categoryclass']) {\n        this.cssConfig_.row += ' ' + categoryDef['categoryclass'];\n    }\n};\n\n","/*\n * Public API Surface of ngx-blockly\n */\nimport * as Blockly from 'blockly/core';\n\nexport { Blockly };\n\n// Locales\nimport * as EN from 'blockly/msg/en';\n\nBlockly.setLocale(EN);\n\nexport * from './lib/ngx-blockly/ngx-blockly.component';\nexport * from './lib/ngx-blockly/ngx-blockly.config';\nexport * from './lib/ngx-blockly/ngx-blockly-generator.config';\nexport * from './lib/ngx-blockly/models/block';\nexport * from './lib/ngx-blockly/models/custom-block';\nexport * from './lib/ngx-blockly/models/xml-block';\nexport * from './lib/ngx-blockly/models/category';\nexport * from './lib/ngx-blockly/models/button';\nexport * from './lib/ngx-blockly/models/label';\nexport * from './lib/ngx-blockly/models/separator';\nexport * from './lib/ngx-blockly/models/theme';\nexport * from './lib/ngx-blockly/models/node';\nexport * from './lib/ngx-blockly/models/block-mutator';\nexport * from './lib/ngx-blockly/plugins/ngx-blockly.toolbox';\nexport * from './lib/ngx-blockly.module';\n\n\n\n\n\n\n\n\n\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}